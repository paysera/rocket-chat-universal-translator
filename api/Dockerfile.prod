# Multi-stage build for production
FROM node:20-alpine AS builder

# Build arguments
ARG BUILD_VERSION=latest
ARG BUILD_DATE
ARG BUILD_COMMIT

# Set build info
ENV BUILD_VERSION=${BUILD_VERSION}
ENV BUILD_DATE=${BUILD_DATE}
ENV BUILD_COMMIT=${BUILD_COMMIT}

WORKDIR /app

# Copy package files
COPY package*.json ./
COPY tsconfig.json ./

# Install all dependencies (including dev dependencies for build)
RUN npm ci --include=dev

# Copy source code
COPY src/ ./src/

# Build the application
RUN npm run build

# Production stage
FROM node:20-alpine AS production

# Install security updates
RUN apk update && apk upgrade && \
    apk add --no-cache curl dumb-init && \
    rm -rf /var/cache/apk/*

# Create non-root user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nextjs -u 1001 -G nodejs

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install only production dependencies
RUN npm ci --only=production && \
    npm cache clean --force

# Copy built application from builder stage
COPY --from=builder --chown=nextjs:nodejs /app/dist ./dist

# Copy any additional runtime files if needed
COPY --chown=nextjs:nodejs ./scripts ./scripts

# Create necessary directories
RUN mkdir -p logs uploads && \
    chown -R nextjs:nodejs logs uploads

# Set up health check script
COPY --chown=nextjs:nodejs ./scripts/health-check.js ./health-check.js

# Switch to non-root user
USER nextjs

# Expose ports
EXPOSE 3001 8080 9090

# Add health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD node health-check.js

# Add labels for metadata
LABEL maintainer="Kostas Noreika" \
      version="${BUILD_VERSION}" \
      build-date="${BUILD_DATE}" \
      build-commit="${BUILD_COMMIT}" \
      description="Universal Translator Pro API - Production Image"

# Use dumb-init to handle signals properly
ENTRYPOINT ["dumb-init", "--"]

# Start the application
CMD ["node", "dist/server.js"]